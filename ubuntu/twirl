#!/bin/bash

# Get full directory name of this script
cwd=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

source "$cwd/src/text_format.sh" &&
  source "$cwd/src/utils.sh" &&
  source "$cwd/src/prompts.sh" &&
  source "$cwd/src/ssh_setup.sh"

###############################################################################
# Misc
###############################################################################

# return 1 if global command line program installed, else 0
cli_is_installed() {
  # set to 1 initially
  local return_=1
  # set to 0 if not found
  type "$1" &>/dev/null || { local return_=0; }
  # return value
  echo "$return_"
}

# mas_setup() {
#     if mas account > /dev/null; then
#         return 0
#     else
#         return 1
#     fi
# }

update_apt() {
  sudo apt-get update -yqq > /dev/null
  print_success "apt sources updated"
}

upgrade_apt() {
  sudo apt-get upgrade -yqq > /dev/null
  print_success "apt upgrade successful\n"
}

install_apt_list() {
  # installs a list of apt packages
  # uses package_list array
  local install_list=()
  for pkg in "$@"; do
    if dpkg -s "$pkg" &> /dev/null; then
      print_success_muted "$pkg already installed. Skipping."
    else
      # not yet installed, add to list
      install_list+=("$pkg")
    fi
  done

  printf "\n"
  if [[ ${#install_list[@]} -eq 0 ]]; then
    print_success_muted "No new packages to install."
  else
    echo_install "Installing " "${install_list[@]}" "\n"
    sudo apt-get install -yqq "${install_list[@]}" > /dev/null
    print_in_green "${bold}✓ installed!${normal}\n"
  fi
}

# install_brews() {
#     if test ! $(brew list | grep $brew); then
#         echo_install "Installing $brew"
# 		brew install $brew >/dev/null
# 		print_in_green "${bold}✓ installed!${normal}\n"
# 	else
# 		print_success_muted "$brew already installed. Skipped."
#     fi
# }

# install_application_via_brew() {
#     if [[ ! $(brew cask list | grep $cask) ]]; then
#         echo_install "Installing $cask"
#         brew cask install $cask --appdir=/Applications >/dev/null
#         print_in_green "${bold}✓ installed!${normal}\n"
#     else
#     	print_success_muted "$cask already installed. Skipped."
#     fi
# }

# install_application_via_app_store() {
# 	if ! mas list | grep $1 &> /dev/null; then
# 		echo_install "Installing $2"
# 		mas install $1 >/dev/null
# 		print_in_green "${bold}✓ installed!${normal}\n"
# 	else
# 		print_success_muted "$2 already installed. Skipped."
# 	fi
# }

install_npm_packages() {
  # $2 = cli name (such as ncu); $1 = npm package (such as npm-check-updates)
  if [[ $(cli_is_installed "$2") == 0 ]]; then
    echo_install "Installing $1"
    npm install "$1" -g --silent
    print_in_green "${bold}✓ installed!${normal}\n"
  else
    print_success_muted "$1 already installed. Skipped."
  fi
}

